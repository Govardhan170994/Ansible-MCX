# 4.1.3.20	Ensure the audit configuration is immutable (Automated)

---
- name: Install systemd-journal-remote
  hosts: localhost
  become: true

  tasks:
    - name: Create directory if it doesn't exist
      file:
        path: /etc/audit/rules.d
        state: directory

    - name: Ensure 99-finalize.rules file exists
      file:
        path: /etc/audit/rules.d/99-finalize.rules
        state: touch

    - name: Add "-e 2" at the end of the file
      blockinfile:
        path: /etc/audit/rules.d/99-finalize.rules
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
        block: "-e 2"
        insertafter: EOF
      loop: ['']


# 4.2.1.1	Ensure rsyslog is installed (Automated)

---
- name: Install rsyslog
  hosts: localhost
  become: true 

  tasks:
    - name: Install rsyslog 
      package:
        name: rsyslog
        state: present

# 4.2.1.2	Ensure rsyslog service is enabled (Automated)

---
- name: Enable and start rsyslog service
  hosts: localhost
  become: true

  tasks:
    - name: Enable and start rsyslog service using systemctl
      systemd:
        name: rsyslog
        state: started
        enabled: yes

# 4.2.1.3	Ensure journald is configured to send logs to rsyslog (Manual)

---
- name: Configure journald.conf and restart rsyslog
  hosts: localhost
  become: true

  tasks:
    - name: Add "ForwardToSyslog=yes" to /etc/systemd/journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        line: "ForwardToSyslog=yes"
        state: present 
      notify:
        - Restart rsyslog  

  handlers:
    - name: Restart rsyslog
      service:
        name: rsyslog
        state: restarted


# 4.2.2.1.1	Ensure systemd-journal-remote is installed (Manual)

---
- name: Install systemd-journal-remote
  hosts: localhost
  become: true

  tasks:
    - name: Install systemd-journal-remote using dnf package manager
      package:
        name: systemd-journal-remote
        state: present

# 4.2.2.1.2	Ensure systemd-journal-remote is configured (Manual)

---
- name: Configure systemd-journal-upload
  hosts: localhost
  become: true

  tasks:
    - name: Set configuration options in systemd-journal-upload.conf
      blockinfile:
        path: /etc/systemd/journal-upload.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
        block: |
          URL=192.168.50.42
          ServerKeyFile=/etc/ssl/private/journal-upload.pem
          ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
          TrustedCertificateFile=/etc/ssl/ca/trusted.pem
      loop: [''] 
      notify:
        - Restart systemd-journal-upload  

  handlers:
    - name: Restart systemd-journal-upload
      systemd:
        name: systemd-journal-upload
        state: restarted

# 4.2.2.1.3	Ensure systemd-journal-remote is enabled (Manual)

---
- name: Enable and start systemd-journal-upload service
  hosts: localhost
  become: true 

  tasks:
    - name: Enable and start systemd-journal-upload
      systemd:
        name: systemd-journal-upload.service
        state: started
        enabled: yes

# 4.2.2.1.4	Ensure journald is not configured to recieve logs from a remote client (Automated)

---
- name: Disable and stop systemd-journal-remote.socket
  hosts: localhost
  become: true

  tasks:
    - name: Disable and stop systemd-journal-remote.socket using systemctl
      systemd:
        name: systemd-journal-remote.socket
        state: stopped
        enabled: no
        masked: yes

    #- name: Mask systemd-journal-remote.socket using systemctl
     # systemd:
      #  name: systemd-journal-remote.socket
       # state: masked

# 4.2.2.3	Ensure journald is configured to compress large log files (Automated)

---
- name: Configure journald.conf and restart systemd-journal-upload
  hosts: localhost
  become: true

  tasks:
    - name: Add "Compress=yes" to /etc/systemd/journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        line: "Compress=yes"
        state: present
      notify:
        - Restart systemd-journal-upload

  handlers:
    - name: Restart systemd-journal-upload
      service:
        name: systemd-journal-upload
        state: restarted

# 4.2.2.4	Ensure journald is configured to write logfiles to persistent disk (Automated)

---
- name: Configure journald.conf and restart systemd-journal-upload
  hosts: localhost
  become: true

  tasks:
    - name: Add "Storage=persistent" to /etc/systemd/journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        line: "Storage=persistent"
        state: present
      notify:
        - Restart systemd-journal-upload 

  handlers:
    - name: Restart systemd-journal-upload
      service:
        name: systemd-journal-upload
        state: restarted


# 4.2.2.5	Ensure journald is not configured to send logs to rsyslog (Manual)

---
- name: Remove ForwardToSyslog=yes from journald.conf
  hosts: localhost
  become: true 

  tasks:
    - name: Remove "ForwardToSyslog=yes" from /etc/systemd/journald.conf
      lineinfile:
        path: /etc/systemd/journald.conf
        state: absent
        regexp: "^ForwardToSyslog=yes$"
      notify:
        - Restart systemd-journal-upload

  handlers:
    - name: Restart systemd-journal-upload
      service:
        name: systemd-journal-upload
        state: restarted


# 4.2.2.7	Ensure journald default file permissions configured (Manual)

---
- name: Configure tmpfiles.d/systemd.conf if needed
  hosts: localhost
  become: true  # Enable privilege escalation to root

  tasks:
    - name: Check if /etc/tmpfiles.d/systemd.conf exists
      stat:
        path: /etc/tmpfiles.d/systemd.conf
      register: tmpfiles_conf_stat

    - name: Copy /usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/ if not present
      copy:
        src: /usr/lib/tmpfiles.d/systemd.conf
        dest: /etc/tmpfiles.d/systemd.conf
        remote_src: yes
      when: not tmpfiles_conf_stat.stat.exists

    - name: Set permissions for /etc/tmpfiles.d/systemd.conf as required
      file:
        path: /etc/tmpfiles.d/systemd.conf
        mode: "{{ tmpfiles_conf_permissions }}"
      when: tmpfiles_conf_stat.stat.exists

  vars:
    tmpfiles_conf_permissions: "0640"


# 4.2.1.5	Ensure logging is configured (Manual)

---
- name: Configure rsyslog
  hosts: all
  become: true 

  tasks:
    - name: Edit /etc/rsyslog.conf
      blockinfile:
        path: /etc/rsyslog.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
        block: |
          *.emerg :omusrmsg:*
          auth,authpriv.* /var/log/secure
          mail.* -/var/log/mail
          mail.info -/var/log/mail.info
          mail.warning -/var/log/mail.warn
          mail.err /var/log/mail.err
          cron.* /var/log/cron
          *.=warning;*.=err -/var/log/warn
          *.crit /var/log/warn
          *.*;mail.none;news.none -/var/log/messages
          local0,local1.* -/var/log/localmessages
          local2,local3.* -/var/log/localmessages
          local4,local5.* -/var/log/localmessages
          local6,local7.* -/var/log/localmessages
      loop: [''] 

    - name: Edit /etc/rsyslog.d/*.conf files
      blockinfile:
        path: "{{ item }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          *.emerg :omusrmsg:*
          auth,authpriv.* /var/log/secure
          mail.* -/var/log/mail
          mail.info -/var/log/mail.info
          mail.warning -/var/log/mail.warn
          mail.err /var/log/mail.err
          cron.* /var/log/cron
          *.=warning;*.=err -/var/log/warn
          *.crit /var/log/warn
          *.*;mail.none;news.none -/var/log/messages
          local0,local1.* -/var/log/localmessages
          local2,local3.* -/var/log/localmessages
          local4,local5.* -/var/log/localmessages
          local6,local7.* -/var/log/localmessages
      loop: "{{ log_files_list }}"
      vars:
        log_files_list: "{{ lookup('fileglob', '/etc/rsyslog.d/*.conf') }}"

  handlers:
    - name: Restart rsyslog
      systemd:
        name: rsyslog
        state: restarted


# 4.2.1.6	Ensure rsyslog is configured to send logs to a remote log host (Manual)

---
- name: Configure rsyslog to forward logs to central log host
  hosts: all
  become: true

  tasks:
    - name: Edit /etc/rsyslog.conf
      lineinfile:
        path: /etc/rsyslog.conf
        regex: '^#?(\*\.\* action\(type="omfwd" target=").*$'
        line: '\g<1>loghost.example.com" port="514" protocol="tcp" action.resumeRetryCount="100" queue.type="LinkedList" queue.size="1000")'
        backup: yes

    - name: Edit /etc/rsyslog.d/*.conf files
      blockinfile:
        path: "{{ item }}"
        backup: yes
        block: |
          *.* action(type="omfwd" target="loghost.example.com" port="514" protocol="tcp" action.resumeRetryCount="100" queue.type="LinkedList" queue.size="1000")
      loop: "{{ log_files_list }}"
      vars:
        log_files_list: "{{ lookup('fileglob', '/etc/rsyslog.d/*.conf') }}"

    - name: Reload rsyslog configuration
      systemd:
        name: rsyslog
        state: restarted

# 4.2.2.1.1	Ensure systemd-journal-remote is installed (Manual)

---
- name: Install systemd-journal-remote
  hosts: all
  become: true

  tasks:
    - name: Install systemd-journal-remote package
      package:
        name: systemd-journal-remote
        state: present


# 4.1.3.19	Ensure kernel module loading unloading and modification is collected (Automated)


---
- name: Create audit rules to monitor kernel module modification
  hosts: all
  become: true

  tasks:
    - name: Determine UID_MIN from /etc/login.defs
      shell: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
      register: uid_min_result

    - name: Create the audit rules file
      blockinfile:
        path: /etc/audit/rules.d/50-kernel_modules.rules
        backup: yes
        block: |
          {% if uid_min_result.stdout is defined %}
          -a always,exit -F arch=b64 -S init_module,finit_module,delete_module,create_module,query_module -F auid>={{ uid_min_result.stdout }} -F auid!=unset -k kernel_modules
          -a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>={{ uid_min_result.stdout }} -F auid!=unset -k kernel_modules
          {% else %}
          ERROR: Variable 'UID_MIN' is unset.
          {% endif %}

    - name: Load audit rules
      command: augenrules --load

    - name: Check if reboot is required
      command: auditctl -s
      register: audit_status

    - name: Display reboot required message if audit is enabled (status 2)
      debug:
        msg: "Reboot required to load rules"
      when: audit_status.stdout | regex_search("enabled.*2")

